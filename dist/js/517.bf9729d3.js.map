{"version":3,"file":"js/517.bf9729d3.js","mappings":"+KACOA,GAAG,c,0CAARC,EAAAA,EAAAA,IAA2B,MAA3BC,E,YAIF,GACEC,KAAM,eAGUC,SAASC,eAAe,cAG1C,IAOIC,EAAY,QAMhB,SAASC,EAAgBC,GACD,KAAlBA,EAAMC,SAAgC,UAAdH,EAC1BA,EAAY,OACe,KAAlBE,EAAMC,SAAgC,SAAdH,EACjCA,EAAY,KACe,KAAlBE,EAAMC,SAAgC,SAAdH,EACjCA,EAAY,QACe,KAAlBE,EAAMC,SAAgC,OAAdH,IACjCA,EAAY,OAEhB,CAbAF,SAASM,iBAAiB,UAAWH,G,YCfrC,MAAMI,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://mypage/./src/views/project/GreedySnake.vue","webpack://mypage/./src/views/project/GreedySnake.vue?1171"],"sourcesContent":["<template>\r\n  <div id=\"game-board\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GreedySnake\"\r\n}\r\n// 获取游戏面板元素\r\nconst gameBoard = document.getElementById('game-board');\r\n\r\n// 定义蛇初始位置和长度\r\nlet snake = [{x: 10, y: 10}];\r\nlet snakeLength = 1;\r\n\r\n// 定义食物的初始位置\r\nlet food = {x: 5, y: 5};\r\n\r\n// 定义当前移动方向\r\nlet direction = 'right';\r\n\r\n// 监听键盘按键事件来改变蛇的移动方向\r\ndocument.addEventListener('keydown', changeDirection);\r\n\r\n// 改变蛇的移动方向\r\nfunction changeDirection(event) {\r\n  if (event.keyCode === 37 && direction !== 'right') {\r\n    direction = 'left';\r\n  } else if (event.keyCode === 38 && direction !== 'down') {\r\n    direction = 'up';\r\n  } else if (event.keyCode === 39 && direction !== 'left') {\r\n    direction = 'right';\r\n  } else if (event.keyCode === 40 && direction !== 'up') {\r\n    direction = 'down';\r\n  }\r\n}\r\n\r\n// 更新游戏状态\r\nfunction updateGame() {\r\n  // 清空游戏面板\r\n  gameBoard.innerHTML = '';\r\n\r\n  // 移动蛇的身体\r\n  const head = {x: snake[0].x + getDirectionX(), y: snake[0].y + getDirectionY()};\r\n  snake.unshift(head);\r\n  if (snake.length > snakeLength) {\r\n    snake.pop();\r\n  }\r\n\r\n  // 检查是否蛇吃到了自己或触碰到边界\r\n  if (isSnakeDead()) {\r\n    clearInterval(gameInterval);\r\n    alert('游戏结束！');\r\n    restartGame();\r\n    return;\r\n  }\r\n\r\n  // 检查是否吃到食物\r\n  if (head.x === food.x && head.y === food.y) {\r\n    snakeLength++;\r\n    food = generateFood();\r\n  }\r\n\r\n  // 绘制蛇\r\n  snake.forEach(segment => {\r\n    const snakeElement = document.createElement('div');\r\n    snakeElement.style.left = segment.x * 20 + 'px';\r\n    snakeElement.style.top = segment.y * 20 + 'px';\r\n    snakeElement.classList.add('snake');\r\n    gameBoard.appendChild(snakeElement);\r\n  });\r\n\r\n  // 绘制食物\r\n  const foodElement = document.createElement('div');\r\n  foodElement.style.left = food.x * 20 + 'px';\r\n  foodElement.style.top = food.y * 20 + 'px';\r\n  foodElement.classList.add('food');\r\n  gameBoard.appendChild(foodElement);\r\n}\r\n\r\n// 根据当前方向获取移动偏移量\r\nfunction getDirectionX() {\r\n  if (direction === 'left') {\r\n    return -1;\r\n  } else if (direction === 'right') {\r\n    return 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction getDirectionY() {\r\n  if (direction === 'up') {\r\n    return -1;\r\n  } else if (direction === 'down') {\r\n    return 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\n// 检测蛇是否死亡\r\nfunction isSnakeDead() {\r\n  const head = snake[0];\r\n  // 检查是否触碰边界\r\n  if (head.x < 0 || head.x >= 20 || head.y < 0 || head.y >= 20) {\r\n    return true;\r\n  }\r\n  // 检查是否吃到自己\r\n  for (let i = 1; i < snake.length; i++) {\r\n    if (head.x === snake[i].x && head.y === snake[i].y) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n// 生成随机食物位置\r\nfunction generateFood() {\r\n  return {\r\n    x: Math.floor(Math.random() * 20),\r\n    y: Math.floor(Math.random() * 20)\r\n  };\r\n}\r\n\r\n// 重新开始游戏\r\nfunction restartGame() {\r\n  snake = [{x: 10, y: 10}];\r\n  snakeLength = 1;\r\n  food = generateFood();\r\n  direction = 'right';\r\n  //gameInterval = setInterval(updateGame, 250);\r\n}\r\n\r\n// 游戏循环\r\n//let gameInterval = setInterval(updateGame, 250);\r\n</script>\r\n\r\n<style scoped>\r\n#game-board {\r\n  width: 400px;\r\n  height: 400px;\r\n  border: 2px solid #000;\r\n  position: relative;\r\n  margin: 0 auto;\r\n}\r\n\r\n.snake {\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: green;\r\n  position: absolute;\r\n}\r\n\r\n.food {\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: red;\r\n  position: absolute;\r\n}\r\n</style>\r\n","import { render } from \"./GreedySnake.vue?vue&type=template&id=37f9c7ce&scoped=true\"\nimport script from \"./GreedySnake.vue?vue&type=script&lang=js\"\nexport * from \"./GreedySnake.vue?vue&type=script&lang=js\"\n\nimport \"./GreedySnake.vue?vue&type=style&index=0&id=37f9c7ce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-37f9c7ce\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","name","document","getElementById","direction","changeDirection","event","keyCode","addEventListener","__exports__","render"],"sourceRoot":""}