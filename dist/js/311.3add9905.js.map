{"version":3,"file":"js/311.3add9905.js","mappings":"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","sources":["webpack://mypage/./src/views/project/GreedySnake.vue","webpack://mypage/./src/views/project/GreedySnake.vue?1171"],"sourcesContent":["<template>\r\n  <button @click=\"restartGame\">Start</button>\r\n  <div>score: {{ snakeLength - 1 }}</div>\r\n  <div id=\"game-board\">\r\n    <div v-for=\"segment in snake\" :key=\"segment.id\" class=\"snake\"\r\n         :style=\"{ left: segment.x * 20 + 'px', top: segment.y * 20 + 'px' }\"></div>\r\n    <div v-if=\"food\" class=\"food\" :style=\"{ left: food.x * 20 + 'px', top: food.y * 20 + 'px' }\"></div>\r\n  </div>\r\n  <div class=\"direction-buttons\">\r\n    <div class=\"vertical-buttons\">\r\n      <button @click=\"move('up')\">Up</button>\r\n      <div class=\"horizontal-buttons\">\r\n        <button @click=\"move('left')\">Left</button>\r\n        <button @click=\"move('right')\">Right</button>\r\n      </div>\r\n      <button @click=\"move('down')\">Down</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GreedySnake\",\r\n  data() {\r\n    return {\r\n      direction: 'left',\r\n      snake: [{x: 10, y: 10}],\r\n      snakeLength: 1,\r\n      food: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  },\r\n  methods: {\r\n    move(direction) {\r\n      this.direction = direction;\r\n    },\r\n\r\n    handleKeyDown(event) {\r\n      if (event.key === \"ArrowUp\" && this.direction !== \"down\") {\r\n        this.direction = \"up\";\r\n      } else if (event.key === \"ArrowDown\" && this.direction !== \"up\") {\r\n        this.direction = \"down\";\r\n      } else if (event.key === \"ArrowLeft\" && this.direction !== \"right\") {\r\n        this.direction = \"left\";\r\n      } else if (event.key === \"ArrowRight\" && this.direction !== \"left\") {\r\n        this.direction = \"right\";\r\n      }\r\n    },\r\n    updateGame() {\r\n      const head = {x: this.snake[0].x + this.getDirectionX(), y: this.snake[0].y + this.getDirectionY()};\r\n      this.snake.unshift(head);\r\n      if (head.x === this.food.x && head.y === this.food.y) {\r\n        this.snakeLength++;\r\n        this.food = this.generateFood();\r\n      }\r\n      if (this.snake.length > this.snakeLength) {\r\n        this.snake.pop();\r\n      }\r\n      if (this.isSnakeDead()) {\r\n        clearInterval(this.gameInterval);\r\n        alert('游戏结束！');\r\n        this.snake = [{x: 10, y: 10}];\r\n        this.food = '';\r\n      }\r\n    },\r\n\r\n    getDirectionX() {\r\n      if (this.direction === 'left') {\r\n        return -1;\r\n      } else if (this.direction === 'right') {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    },\r\n    getDirectionY() {\r\n      if (this.direction === 'up') {\r\n        return -1;\r\n      } else if (this.direction === 'down') {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    },\r\n    isSnakeDead() {\r\n      const head = this.snake[0];\r\n      // 检查是否触碰边界\r\n      if (head.x < 0 || head.x > 20 || head.y < 0 || head.y > 20) {\r\n        return true;\r\n      }\r\n      // 检查是否吃到自己\r\n      for (let i = 1; i < this.snake.length; i++) {\r\n        if (head.x === this.snake[i].x && head.y === this.snake[i].y) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    generateFood() {\r\n      while (1) {\r\n        let x = Math.floor(Math.random() * 20);\r\n        let y = Math.floor(Math.random() * 20);\r\n        let flag = false;\r\n        for (let segment in this.snake) {\r\n          if (x === segment.x && y === segment.y) {\r\n            flag = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!flag) {\r\n          break;\r\n        }\r\n      }\r\n      return {\r\n        x: Math.floor(Math.random() * 20),\r\n        y: Math.floor(Math.random() * 20)\r\n      };\r\n    },\r\n    restartGame() {\r\n      this.snake = [{x: 10, y: 10}];\r\n      this.snakeLength = 1;\r\n      this.food = this.generateFood();\r\n      this.direction = 'right';\r\n      this.gameInterval = setInterval(this.updateGame, 250);\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#game-board {\r\n  width: 420px;\r\n  height: 420px;\r\n  border: 2px solid #000;\r\n  position: relative;\r\n  margin: 0 auto;\r\n}\r\n\r\n.snake {\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: green;\r\n  position: absolute;\r\n}\r\n\r\n.food {\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: red;\r\n  position: absolute;\r\n}\r\n\r\n.direction-buttons {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.vertical-buttons {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.horizontal-buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\nbutton {\r\n  margin: 10px;\r\n  padding: 10px 20px;\r\n  font-size: 18px;\r\n  border: none;\r\n  background-color: #ddd;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #ccc;\r\n}\r\n</style>\r\n","import { render } from \"./GreedySnake.vue?vue&type=template&id=498e0320&scoped=true\"\nimport script from \"./GreedySnake.vue?vue&type=script&lang=js\"\nexport * from \"./GreedySnake.vue?vue&type=script&lang=js\"\n\nimport \"./GreedySnake.vue?vue&type=style&index=0&id=498e0320&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-498e0320\"]])\n\nexport default __exports__"],"names":["id","class","_createElementVNode","onClick","_cache","args","$options","restartGame","_toDisplayString","$data","snakeLength","_hoisted_1","_createElementBlock","_Fragment","_renderList","snake","segment","key","style","_normalizeStyle","left","x","top","y","food","_hoisted_2","_hoisted_3","$event","move","_hoisted_4","name","data","direction","mounted","document","addEventListener","this","handleKeyDown","methods","event","updateGame","head","getDirectionX","getDirectionY","unshift","generateFood","length","pop","isSnakeDead","clearInterval","gameInterval","alert","i","Math","floor","random","flag","setInterval","__exports__","render"],"sourceRoot":""}